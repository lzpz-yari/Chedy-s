/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import Controlador.Conexion;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author pedro
 */
public class Proveedor extends javax.swing.JFrame {

    Conexion con1 = Conexion.getInstance();
    Connection conet;
    DefaultTableModel modelo;

    private AltaProveedor altaProveedor;

    /**
     * Creates new form Proveedor
     */
    public Proveedor() {
        initComponents();
        consultarProveedor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProveedor = new javax.swing.JTable();
        Buscar = new javax.swing.JButton();
        AgregarProveedor = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(1366, 768, 768, 768));
        setUndecorated(true);
        setSize(new java.awt.Dimension(1366, 768));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        TablaProveedor.setBackground(new java.awt.Color(204, 204, 204));
        TablaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "RFC", "Nombre", "Apellido Paterno", "Apellido Materno", "Telefono", "Email", "Lote del Pedido", "Fecha de Surtido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProveedorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaProveedor);

        Buscar.setBackground(new java.awt.Color(0, 0, 0));
        Buscar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Buscar.setForeground(new java.awt.Color(255, 255, 255));
        Buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/Imagenes/Buscar_1.png"))); // NOI18N
        Buscar.setText("Buscar Proveedor");
        Buscar.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 51, 153)));
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        AgregarProveedor.setBackground(new java.awt.Color(0, 0, 0));
        AgregarProveedor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AgregarProveedor.setForeground(new java.awt.Color(255, 255, 255));
        AgregarProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/Imagenes/nuevo.GIF"))); // NOI18N
        AgregarProveedor.setText("Agregar Proeedor");
        AgregarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarProveedorActionPerformed(evt);
            }
        });

        Regresar.setBackground(new java.awt.Color(0, 0, 0));
        Regresar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Regresar.setForeground(new java.awt.Color(255, 255, 255));
        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Cambria", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Datos  de Proveedores");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Regresar)
                                .addGap(216, 216, 216)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)
                        .addComponent(AgregarProveedor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(Regresar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarProveedor))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarProveedorActionPerformed
        this.dispose();
// Si no hay una instancia abierta de AltaProveedor, la crea
        if (altaProveedor == null || !altaProveedor.isVisible()) {
            altaProveedor = new AltaProveedor();  // Crear nueva instancia de AltaProveedor
            altaProveedor.setVisible(true);  // Hacerla visible

            // Asegurarse de que la ventana AltaProveedor se cierra después de agregar un proveedor
            altaProveedor.addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                    // Después de cerrar AltaProveedor, actualizar la tabla
                    consultarProveedor();  // Actualiza la tabla de proveedores
                }
            });
        }

    }//GEN-LAST:event_AgregarProveedorActionPerformed

    private void TablaProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProveedorMouseClicked
        // TODO add your handling code here:
        consultarProveedor();
    }//GEN-LAST:event_TablaProveedorMouseClicked

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
        BuscarProveedor buscar = new BuscarProveedor();
        buscar.setVisible(true);
    }//GEN-LAST:event_BuscarActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        // Si la ventana de AltaProveedor está abierta, la cerramos antes de abrir Inventario
        this.dispose();
        if (altaProveedor != null && altaProveedor.isVisible()) {
            altaProveedor.dispose();  // Cierra la ventana de AltaProveedor
        }

        // Verifica si la ventana Inventario ya está visible
        for (java.awt.Window window : java.awt.Window.getWindows()) {
            if (window instanceof Inventario) {
                window.setVisible(true);  // Si la ventana ya está abierta, la hace visible
                this.dispose();  // Cierra la ventana actual (Proveedor)
                return;  // No abre una nueva instancia
            }
        }
        // Si no hay instancia abierta de Inventario, crea una nueva
        Inventario inventario = new Inventario();
        inventario.setVisible(true);

    }//GEN-LAST:event_RegresarActionPerformed

    private void consultarProveedor() {
        conet = con1.getConnection();
        String sql = "SELECT RFC, Nombre, Apellido_Paterno, Apellido_Materno, Numero_Telefono, Email, NumeroLote, Fecha FROM Proveedor"; // Agregar RFC a la consulta
        try {
            conet = con1.getConnection(); // Intenta obtener la conexión
            if (conet != null) { // Verifica si la conexión es válida
                PreparedStatement statement = conet.prepareStatement(sql);
                ResultSet result = statement.executeQuery();

                // Se utiliza DefaultTableModel y fireTableDataChanged() para mejorar la velocidad de actualización
                modelo = (DefaultTableModel) TablaProveedor.getModel();
                modelo.setRowCount(0);

                while (result.next()) {
                    Object[] row = {
                        result.getString("RFC"), // RFC como la primera columna
                        result.getString("Nombre"),
                        result.getString("Apellido_Paterno"),
                        result.getString("Apellido_Materno"),
                        result.getString("Numero_Telefono"),
                        result.getString("Email"),
                        result.getString("NumeroLote"),
                        result.getString("Fecha")
                    };
                    modelo.addRow(row);
                }

                // Notifica a la JTable que los datos han cambiado
                modelo.fireTableDataChanged();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo establecer la conexión con la base de datos.");
            }
        } catch (SQLException e) {
            //e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al consultar la base de datos: " + e.getMessage());
        }
    }

    private void generarExcel() {
        String excelPath = "C:\\Users\\ep972\\Desktop\\Proveedores.xlsx";
        String[] columnHeaders = {
            "RFC", "Nombre", "Apellido Paterno", "Apellido Materno",
            "Número de Teléfono", "Email", "Número de Lote", "Fecha"
        };

        try (Workbook workbook = new XSSFWorkbook(); FileOutputStream fileOut = new FileOutputStream(excelPath)) {

            Sheet sheet = workbook.createSheet("Proveedores");

            CellStyle headerStyle = workbook.createCellStyle();
            Font font = workbook.createFont();
            font.setBold(true);
            headerStyle.setFont(font);

            Row headerRow = sheet.createRow(0);
            for (int i = 0; i < columnHeaders.length; i++) {
                Cell cell = headerRow.createCell(i);
                cell.setCellValue(columnHeaders[i]);
                cell.setCellStyle(headerStyle);
            }

            String sql = "SELECT RFC, Nombre, Apellido_Paterno, Apellido_Materno, Numero_Telefono, Email, NumeroLote, Fecha FROM Proveedor";
            try (PreparedStatement statement = conet.prepareStatement(sql); ResultSet resultSet = statement.executeQuery()) {

                int rowNum = 1;

                while (resultSet.next()) {
                    Row row = sheet.createRow(rowNum++);
                    row.createCell(0).setCellValue(resultSet.getString("RFC"));
                    row.createCell(1).setCellValue(resultSet.getString("Nombre"));
                    row.createCell(2).setCellValue(resultSet.getString("Apellido_Paterno"));
                    row.createCell(3).setCellValue(resultSet.getString("Apellido_Materno"));
                    row.createCell(4).setCellValue(resultSet.getString("Numero_Telefono"));
                    row.createCell(5).setCellValue(resultSet.getString("Email"));
                    row.createCell(6).setCellValue(resultSet.getString("NumeroLote"));
                    row.createCell(7).setCellValue(resultSet.getString("Fecha"));
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al consultar la base de datos: " + e.getMessage());
            }

            for (int i = 0; i < columnHeaders.length; i++) {
                sheet.autoSizeColumn(i);
            }

            workbook.write(fileOut);
            JOptionPane.showMessageDialog(null, "El archivo Excel se ha generado exitosamente en el escritorio.");

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al generar el archivo Excel: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarProveedor;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Regresar;
    private javax.swing.JTable TablaProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
